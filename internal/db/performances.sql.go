// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: performances.sql

package db

import (
	"context"
)

const createPerformance = `-- name: CreatePerformance :one
INSERT INTO performances(actor_id, movie_id, year) VALUES ($1, $2, $3) RETURNING id, actor_id, movie_id, year
`

type CreatePerformanceParams struct {
	ActorID int32 `json:"actor_id"`
	MovieID int32 `json:"movie_id"`
	Year    int32 `json:"year"`
}

func (q *Queries) CreatePerformance(ctx context.Context, arg CreatePerformanceParams) (Performance, error) {
	row := q.db.QueryRowContext(ctx, createPerformance, arg.ActorID, arg.MovieID, arg.Year)
	var i Performance
	err := row.Scan(
		&i.ID,
		&i.ActorID,
		&i.MovieID,
		&i.Year,
	)
	return i, err
}

const getPerformance = `-- name: GetPerformance :one
SELECT id, actor_id, movie_id, year FROM performances WHERE id = $1
`

func (q *Queries) GetPerformance(ctx context.Context, id int64) (Performance, error) {
	row := q.db.QueryRowContext(ctx, getPerformance, id)
	var i Performance
	err := row.Scan(
		&i.ID,
		&i.ActorID,
		&i.MovieID,
		&i.Year,
	)
	return i, err
}
